<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFFFFF"/>
    <Color x:Key="MyErrorColorValue">#DC3545</Color>
    <Color x:Key="WindowShadowColor" A="255" R="204" G="204" B="204"/>
    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="TitleBarTextBrush" Color="#343A40"/>
    <SolidColorBrush x:Key="CloseButtonForegroundBrush" Color="#6C757D"/>
    <SolidColorBrush x:Key="CloseButtonHoverBackgroundBrush" Color="#E74C3C"/>
    <SolidColorBrush x:Key="CloseButtonHoverPressedBackgroundBrush" Color="#C50E1F"/>
    <SolidColorBrush x:Key="CloseButtonHoverForegroundBrush" Color="White"/>

    <SolidColorBrush x:Key="LabelTextBrush" Color="#495057"/>
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="InputBorderBrush" Color="#CED4DA"/>
    <SolidColorBrush x:Key="InputFocusedBorderBrush" Color="#007BFF"/>
    <SolidColorBrush x:Key="InputTextBrush" Color="#212529"/>
    <SolidColorBrush x:Key="InputCaretBrush" Color="#007BFF"/>
    <SolidColorBrush x:Key="ErrorBackgroundBrush" Color="{StaticResource MyErrorColorValue}"/>
    <SolidColorBrush x:Key="FooterTextBrush" Color="#6C757D"/>

    <SolidColorBrush x:Key="PrimaryButtonBackgroundBrush" Color="#007BFF"/>
    <SolidColorBrush x:Key="PrimaryButtonForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="PrimaryButtonHoverBackgroundBrush" Color="#004085"/>
    <SolidColorBrush x:Key="PrimaryButtonPressedBackgroundBrush" Color="#004085"/>

    <SolidColorBrush x:Key="SuccessBackgroundBrush" Color="#4CAF50"/>
    <SolidColorBrush x:Key="SuccessButtonHoverBackgroundBrush" Color="#45A049"/>
    <SolidColorBrush x:Key="SuccessButtonPressedBackgroundBrush" Color="#3E8E41"/>

    <SolidColorBrush x:Key="DangerBackgroundBrush" Color="{StaticResource MyErrorColorValue}"/>
    <SolidColorBrush x:Key="DangerButtonHoverBackgroundBrush" Color="#C82333"/>
    <SolidColorBrush x:Key="DangerButtonPressedBackgroundBrush" Color="#A51C2A"/>

    <SolidColorBrush x:Key="SecondaryButtonBackgroundBrush" Color="#6C757D"/>
    <SolidColorBrush x:Key="SecondaryButtonHoverBackgroundBrush" Color="#5A6268"/>
    <SolidColorBrush x:Key="SecondaryButtonPressedBackgroundBrush" Color="#495057"/>

    <SolidColorBrush x:Key="NotificationTextBrush" Color="White"/>
    
    <Style x:Key="InputFieldBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="LoginInputTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource InputTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="CaretBrush" Value="{StaticResource InputCaretBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="InputOuterBorder" Style="{StaticResource InputFieldBorderStyle}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="InputOuterBorder" Property="BorderBrush" Value="{StaticResource InputFocusedBorderBrush}"/>
                            <Setter TargetName="InputOuterBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="InputOuterBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginInputPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource InputTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="CaretBrush" Value="{StaticResource InputCaretBrush}"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="InputOuterBorder"
                            Background="{StaticResource InputBackgroundBrush}"
                            BorderBrush="{StaticResource InputBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="8">
                        <Decorator x:Name="PART_ContentHost"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="InputOuterBorder" Property="BorderBrush" Value="{StaticResource InputFocusedBorderBrush}"/>
                            <Setter TargetName="InputOuterBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="InputOuterBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InputLabelTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LabelTextBrush}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>
    <Style x:Key="PrimaryActionButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="{StaticResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryButtonForegroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="15,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource PrimaryButtonPressedBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CompactActionButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryActionButtonStyle}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="16,0"/>
    </Style>

    <Style x:Key="BaseCorner6ActionButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="36"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryButtonForegroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseCorner6ActionButtonStyle}">
        <Setter Property="Background" Value="{StaticResource DangerBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource DangerButtonHoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource DangerButtonPressedBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseCorner6ActionButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SuccessBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource SuccessButtonHoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource SuccessButtonPressedBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseCorner6ActionButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SecondaryButtonBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource SecondaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource SecondaryButtonPressedBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AdminTitleBarBaseButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="46"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="PART_ButtonBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ButtonBorder" 
                                    Property="Background" 
                                    Value="#E5E5E5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ButtonBorder" 
                                    Property="Background" 
                                    Value="#CCCCCC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AdminMinimizeButtonStyle" TargetType="Button" 
           BasedOn="{StaticResource AdminTitleBarBaseButtonStyle}">
        <Setter Property="Content" Value="&#xE949;"/>
        <Setter Property="ToolTip" Value="Minimize"/>
    </Style>

    <Style x:Key="AdminMaximizeButtonStyle" TargetType="Button" 
           BasedOn="{StaticResource AdminTitleBarBaseButtonStyle}">
        <Setter Property="Content" Value="&#xE739;"/>
        <Setter Property="ToolTip" Value="Maximize"/>
    </Style>

    <Style x:Key="AdminRestoreButtonStyle" TargetType="Button" 
           BasedOn="{StaticResource AdminTitleBarBaseButtonStyle}">
        <Setter Property="Content" Value="&#xE923;"/>
        <Setter Property="ToolTip" Value="Restore Down"/>
    </Style>

    <Style x:Key="AdminCloseButtonStyle" TargetType="Button" 
           BasedOn="{StaticResource AdminTitleBarBaseButtonStyle}">
        <Setter Property="Content" Value="&#xE106;"/>
        <Setter Property="ToolTip" Value="Close"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                        Value="{StaticResource CloseButtonHoverBackgroundBrush}"/>
                <Setter Property="Foreground" 
                        Value="{StaticResource CloseButtonHoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                        Value="{StaticResource CloseButtonHoverPressedBackgroundBrush}"/>
                <Setter Property="Foreground" 
                        Value="{StaticResource CloseButtonHoverForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NavigationButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="6" 
                            x:Name="NavButtonBorder">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="Center" 
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="NavButtonBorder" Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="NavButtonBorder" Property="Background" Value="{StaticResource InputBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="NavButtonBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActiveNavigationButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="15,12"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="FontWeight" Value="Medium"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Margin" Value="5,2"/>

    <Setter Property="Background" Value="{StaticResource PrimaryButtonBackgroundBrush}"/>

    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Border x:Name="NavButtonBorder"
                        Background="{TemplateBinding Background}" CornerRadius="6">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="Center"
                                      Margin="{TemplateBinding Padding}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryButtonHoverBackgroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryButtonPressedBackgroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>
    <Style x:Key="TitleBarActionButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBarTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" x:Name="ButtonBorder">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#D0D0D0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarActionButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource CloseButtonForegroundBrush}"/>
        <Setter Property="FontSize" Value="18"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseButtonHoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource CloseButtonHoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseButtonHoverPressedBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource CloseButtonHoverForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource LoginInputTextBoxStyle}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{StaticResource WindowShadowColor}" 
                                  Direction="270" 
                                  ShadowDepth="2" 
                                  Opacity="0.1" 
                                  BlurRadius="8"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource InputBorderBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource InputBorderBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{StaticResource TitleBarBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource TitleBarTextBrush}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="Padding" Value="10,8"/>
                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    <Setter Property="BorderBrush" Value="{StaticResource InputBorderBrush}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="10,8"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryButtonBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>